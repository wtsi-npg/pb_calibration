#!/bin/bash

#########################################################################
#
# run pb_calibration pipeline
#
# for usage run
#
#   pb_callibration -h
#
#########################################################################

initialise ()
{

    # set defaults
    bam=""
    ct=""
    filter=""
    intensity_dir=""
    cstart=""
    cstart1=""
    cstart2=""
    compress="1"
    output=""

    TEMP=`getopt -a -o h --long bam:,ct:,filter:,intensity_dir:,cstart:,cstart1:,cstart2:,u,output:,help -n $0 -- "$@"`

    if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

    eval set -- "$TEMP"

    while true ; do
        case "$1" in
            --bam) bam=$2; echo "input bam file $bam" >&2; shift 2 ;;
            --ct) ct=$2; echo "ct $ct" >&2; shift 2 ;;
            --filter) filter=$2; echo "input filter file $filter" >&2; shift 2 ;;
            --intensity_dir) intensity_dir=$2; echo "intensity_dir $intensity_dir" >&2; shift 2 ;;
            --cstart) cstart=$2; echo "cstart $cstart" >&2; shift 2 ;;
            --cstart1) cstart1=$2; echo "cstart1 $cstart1" >&2; shift 2 ;;
            --cstart2) cstart2=$2; echo "cstart2 $cstart2" >&2; shift 2 ;;
            --u) compress=""; echo "do not compress output bam file" >&2; shift 1 ;;
            --output) output=$2; echo "output bam file $output" >&2; shift 2 ;;
            -h|--help) echo "Usage: $0 [options]";
                       echo "                   ";
                       echo "       -bam <bam file>";
                       echo "                   ";
                       echo "       -ct <ct>            calibration table";
                       echo "                   ";
                       echo "       -filter <filter file>";
                       echo "                   ";
                       echo "       -intensity_dir <intensity directory>";
                       echo "                   ";
                       echo "       -cstart <cstart>    cycle number of first base";
                       echo "                   ";
                       echo "            or     ";
                       echo "                   ";
                       echo "       -cstart1 <cstart1>  cycle number of first base of read1";
                       echo "       -cstart2 <cstart2>  cycle number of first base of read2";
                       echo "                   ";
                       echo "                   ";
                       echo "       -u                  do not compress output bam file";
                       echo "                   ";
                       echo "       -output <output>    output bam file";
                       echo "                             default none, will write recalibrated bam to stdout";
                       echo "                   ";
                       echo "       -h|--help   ";
                       echo "                   ";
                       exit 0 ;;
            --) shift ; break ;;
            *) echo "Unrecognised option $1" >&2; exit 1 ;;
        esac
    done

    if [ -z $ct ] ; then
        echo "You must specify ct" >&2
        exit 1
    fi

    if [ -z $bam ] ; then
        echo "You must supply a bam file" >&2
        exit 1
    fi

    if [ -z $cstart ] && ( [ -z $cstart1 ] || [ -z $cstart2 ] ) ; then
        echo "You must supply cstart OR cstart1 and cstart2" >&2
        exit 1
    fi

    if [ $cstart ] && ( [ $cstart1 ] || [ $cstart2 ] ) ; then
        echo "You must specify cstart OR cstart1 and cstart2 not both" >&2
        exit 1
    fi
}

set -o errexit
set -o nounset

tools=`dirname $0`
tools=`readlink -f $tools`

initialise "$@"

if [ ! -s $bam ] ; then
    echo "bam file $bam does not exist" >&2
    exit 1
fi

if [ $intensity_dir ] ; then
    if [ ! -d $intensity_dir ] ; then
        echo "Intensity directory $intensity_dir does not exist" >&2
        exit 1
    fi
    echo "intensity directory $intensity_dir" >&2
else
    echo "No intensity directory" >&2
fi    

if [ $ct ] ; then
    if [ ! -s $ct ] ; then
      echo "Calibration table $ct does not exist" >&2
      exit 1
    fi
fi

echo "Recalibrating..." >&2

parms="-ct $ct"

if [ $intensity_dir ] ; then
  parms="$parms -intensity-dir $intensity_dir"
fi

if [ $filter ] ; then
    parms="$parms -filter_file $filter"
fi

if [ $cstart ] ; then
    parms="$parms -cstart $cstart"
else
    parms="$parms -cstart1 $cstart1 -cstart2 $cstart2"
fi

if [ -z $compress ] ; then
    parms="$parms -u"
fi

if [ $output ] ; then
    parms="$parms -o $output"
else
    echo "Will write to stdout" >&2
fi    

$tools/predictor_pu $parms $bam
